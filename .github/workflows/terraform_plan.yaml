name: Terraform Plan

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AUDIT_SHEET_ID: ${{ secrets.AUDIT_SHEET_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SHEETS_EMAIL: ${{ secrets.SHEETS_EMAIL }}
  SHEETS_PRIVATE_KEY: ${{ secrets.SHEETS_PRIVATE_KEY }}
  SHEETS_PRIVATE_KEY_ID: ${{ secrets.SHEETS_PRIVATE_KEY_ID }}
  SHEET_ID: ${{ secrets.SHEET_ID }}
  TOKEN: ${{ secrets.TOKEN }}


jobs:
  terraform:
    name: Plan / Apply
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Terraform 1.5.6
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6
        terraform_wrapper: false

    - name: Cache Terraform
      uses: actions/cache@v3
      with:
        key: terraform-cache
        path: |
          ~/tf/.terraform
          ~/tf/builds

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform -chdir=./tf init
      continue-on-error: true

    - name: Terraform Workspace
      id: workspace
      run: terraform -chdir=./tf workspace select production

    - name: Terraform Validate
      id: validate
      run: terraform -chdir=./tf validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: ./tf/plan.sh
      continue-on-error: true

    - name: Terraform Status
      if: steps.plan.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.init.outcome == 'failure' || steps.fmt.outcome == 'failure'
      run: exit 1
